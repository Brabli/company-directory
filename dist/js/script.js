"use strict";function _defineProperty(e,t,a){return t in e?Object.defineProperty(e,t,{value:a,enumerable:!0,configurable:!0,writable:!0}):e[t]=a,e}function filterResults(){setTimeout(()=>{const e=$("#name-filter").val().toLowerCase().trim(),t=$("#department-filter").val(),a=$("#location-filter").val();$(".person-card").each(function(){const n=$(this),s=getRowById(n.data("id")),o=n.find(".card-department").html(),l=n.find(".card-location").html(),r=n.find(".card-name").html(),d=testDepartment(o,t);if(d)return s.css("display","none"),void n.css("display","none");const i=testLocation(l,a);if(i)return s.css("display","none"),void n.css("display","none");const c=testName(r,e);if(c)return s.css("display","none"),void n.css("display","none");s.css("display","flex"),n.css("display","flex")}),colourRows(),updateShowingCounter()},0)}function testDepartment(e,t){return"All Departments"!==t&&t!==e}function testLocation(e,t){return"All Locations"!==t&&t!==e}function testName(e,t){return!e.toLowerCase().includes(t)}function updateShowingCounter(){let e=0,t=0;$(".person-card").each(function(){"flex"===$(this).css("display")&&t++,e++}),$(".showing-count").html(t),$(".total-count").html(e)}function colourRows(){let e=0;$(".person-row").each(function(){"none"!==$(this).css("display")&&(e%2==0?($(this).removeClass("odd"),$(this).addClass("even")):($(this).removeClass("even"),$(this).addClass("odd")),e++)})}function populateLocationSelects(){const e=Location.getHtmlOptions(),t='<option class="location-option" data-location-id="all">All Locations</option>',a="<option>NEW LOCATION</option>",n=$("#location-filter").val(),s=$("#location-change").val(),o=$("#location-select").val();$("#location-filter").html(t+e),$("#location-filter").val(n),null===$("#location-filter").val()&&$("#location-filter").val("All Locations"),$("#location-change").html(e),$("#location-change").val(s),$("#location-select").html(a+e),$("#location-select").val(o)}function populateDepartmentSelects(){const e=Department.getHtmlOptions(),t='<option data-department-id="all">All Departments</option>',a="<option>NEW DEPARTMENT</option>",n=$("#department-filter").val(),s=$("#add-department").val(),o=$("#edit-department").val(),l=$("#department-select").val();$("#department-filter").html(t+e),$("#department-filter").val(n),null===$("#department-filter").val()&&$("#department-filter").val("All Departments"),$("#add-department").html(e),$("#add-department").val(s),$("#edit-department").html(e),$("#edit-department").val(o),$("#department-select").html(a+e),$("#department-select").val(l)}function changeMainTab(e){const t=$(e.currentTarget),a=$(`.${t.html()}-menu`);t.hasClass("disabled")||(t.hasClass("selected-tab")?(t.removeClass("selected-tab"),a.removeClass("selected-menu")):(t.addClass("selected-tab"),a.addClass("selected-menu"),t.siblings().removeClass("selected-tab"),a.siblings().removeClass("selected-menu")))}function enableTabs(){$(".edit-tab-text-input").attr("disabled",!1),$(".edit-tab-select-input").attr("disabled",!1),$(".delete-message").html("Are you sure you want to delete this entry?"),$("#delete-entry").removeClass("disabled")}function disableTabs(){$(".edit-tab-text-input").attr("disabled",!0),$(".edit-tab-select-input").attr("disabled",!0),$("#save-changes").addClass("disabled"),resetEditTab(),$(".delete-message").html("Select an entry to delete it."),$(".delete-button").addClass("disabled")}function changeBottomTab(e){const t=$(e.currentTarget),a=$(`.${t.html().replace(" ","-")}-menu`);t.hasClass("selected-bottom-tab")?(t.removeClass("selected-bottom-tab"),a.removeClass("selected-bottom-menu")):(t.addClass("selected-bottom-tab"),t.siblings().removeClass("selected-bottom-tab"),a.addClass("selected-bottom-menu"),a.siblings().removeClass("selected-bottom-menu"))}function checkIfDepartmentInUse(e){let t=0;return Personnel.personnel.forEach(a=>{a.departmentID===e&&t++}),t}function checkIfLocationInUse(e){let t=0;return Department.departments.forEach(a=>{a.locationID===e&&t++}),t}function resetFilter(){$("#name-filter").val(""),$("#department-filter").val("All Departments"),$("#location-filter").val("All Locations"),filterResults()}function resetEditDepartments(){$("#department-select").val("NEW DEPARTMENT"),$("#department-name").val(""),$("#location-change").val(null),$("#save-department").addClass("disabled"),$("#delete-department").addClass("disabled")}function resetEditLocations(){$("#location-select").val("NEW LOCATION"),$("#location-name").val(""),$("#save-location").addClass("disabled"),$("#delete-location").addClass("disabled")}function resetAddTab(){$(".add-tab-input").val(""),$("#add-entry").addClass("disabled")}function resetEditTab(){$(".edit-tab-text-input").val(""),$(".edit-tab-select-input").val(null)}function selectPerson(e){const t=getCardById(e),a=getRowById(e),n=Personnel.getPersonById(Personnel.currentlySelectedId),s=Department.getDepartmentById(n.departmentID).name;t.addClass("selected-card"),a.addClass("selected-row"),t.siblings().removeClass("selected-card"),a.siblings().removeClass("selected-row"),$("#edit-first-name").val(n.firstName),$("#edit-last-name").val(n.lastName),$("#edit-email").val(n.email),$("#edit-job-title").val(n.jobTitle),$("#edit-department").val(s),Personnel.selectedPersonFirstName=n.firstName.toLowerCase(),Personnel.selectedPersonLastName=n.lastName.toLowerCase(),Personnel.selectedPersonEmail=n.email.toLowerCase(),Personnel.selectedPersonJobTitle=n.jobTitle.toLowerCase(),Personnel.selectedPersonDepartment=s.toLowerCase(),checkEditTabDifferences()}function checkEditTabDifferences(){setTimeout(()=>{""===$("#edit-first-name").val().toLowerCase().trim()||""===$("#edit-last-name").val().toLowerCase().trim()?$("#save-changes").addClass("disabled"):$("#edit-first-name").val().toLowerCase().trim()===Personnel.selectedPersonFirstName&&$("#edit-last-name").val().toLowerCase().trim()===Personnel.selectedPersonLastName&&$("#edit-email").val().toLowerCase().trim()===Personnel.selectedPersonEmail&&$("#edit-job-title").val().toLowerCase().trim()===Personnel.selectedPersonJobTitle&&$("#edit-department").val().toLowerCase()===Personnel.selectedPersonDepartment?$("#save-changes").addClass("disabled"):$("#save-changes").removeClass("disabled")},0)}function checkAddTabRequiredFields(){setTimeout(()=>{""!==$("#add-first-name").val().trim()&&""!==$("#add-last-name").val().trim()&&null!==$("#add-department").val()?$("#add-entry").removeClass("disabled"):$("#add-entry").addClass("disabled")},0)}function reselectPerson(){null!==Personnel.currentlySelectedId&&selectPerson(Personnel.currentlySelectedId)}function getCardById(e){return $(`.person-card[data-id="${e}"`)}function getRowById(e){return $(`.person-row[data-id="${e}"`)}function deselectPerson(){$(".person-card").removeClass("selected-card"),$(".person-row").removeClass("selected-row"),$("#edit-first-name").val(""),$("#edit-last-name").val(""),$("#edit-email").val(""),$("#edit-job-title").val(""),$("#edit-department").val("")}async function saveEditChanges(){const e=Personnel.currentlySelectedId,t=$("#edit-first-name").val().trim(),a=$("#edit-last-name").val().trim(),n=$("#edit-email").val().trim(),s=$("#edit-job-title").val().trim(),o=$("#edit-department").val(),l=Department.getDepartmentByName(o).id,r=await Personnel.updatePersonnel(t,a,s,n,l,e);r?(showMessage("Changes saved!","lime"),Personnel.populateSearchResults(),filterResults(),reselectPerson(),checkEditTabDifferences(),checkEditDepartmentFields()):showMessage("Failed to save changes!","red")}async function addPersonnel(){const e=$("#add-first-name").val().trim(),t=$("#add-last-name").val().trim(),a=$("#add-email").val().trim(),n=$("#add-job-title").val().trim(),s=$("#add-department").val(),o=Department.getDepartmentByName(s).id,l=await Personnel.addPersonnel(e,t,n,a,o);if(l){showMessage("Added new entry!","lime"),resetAddTab();const e=await Personnel.getAllPersonnel();e?(Personnel.populateSearchResults(),filterResults(),reselectPerson()):showMessage("Added entry, but failed to refresh database","yellow"),checkEditDepartmentFields()}else showMessage("Failed to add entry","red")}async function deletePersonnel(){const e=await Personnel.deletePersonnel(Personnel.currentlySelectedId);e?(Personnel.populateSearchResults(),filterResults(),disableTabs(),checkEditDepartmentFields(),showMessage("Entry deleted!","lime")):showMessage("Failed to delete entry","red")}function updateEditDepartmentFields(){const e=$("#department-select").val();if("NEW DEPARTMENT"===e)Department.currentlySelectedId=null,$("#department-name").val(""),$("#location-change").val("");else{let t,a;try{t=Department.getDepartmentByName(e).locationID,a=Location.getLocationById(t).name}catch(e){showMessage("Warning, this department is corrupted!","red")}$("#location-change").val(a),$("#department-name").val(e),Department.currentlySelectedId=Department.getDepartmentByName(e).id,Department.selectedDepCurrentName=e,Department.selectedDepCurrentLoc=a}}async function saveDepartment(){const e=$("#department-select").val(),t=$("#department-name").val().trim(),a=$("#location-change").val(),n=Location.getLocationByName(a).id;if("NEW DEPARTMENT"===e){const e=await Department.addDepartment(t,n);if(e){showMessage("Added new department!","lime"),resetEditDepartments();const e=await Department.getAllDepartments();e?(populateDepartmentSelects(),checkEditLocationFields()):showMessage("Added department, but failed to refresh database","yellow")}else showMessage("Failed to add department")}else{const e=await Department.updateDepartment(t,n,Department.currentlySelectedId);e?(showMessage("Saved changes!","lime"),populateDepartmentSelects(),reselectDepartment(),checkEditDepartmentFields(),checkEditLocationFields(),Personnel.populateSearchResults(),reselectPerson(),filterResults()):showMessage("Failed to save changes","red")}}async function deleteDepartment(){const e=$("#department-select").val();if("NEW DEPARTMENT"!==e){const e=await Department.deleteDepartment(Department.currentlySelectedId);e?(populateDepartmentSelects(),resetEditDepartments(),checkEditLocationFields(),showMessage("Department deleted!","lime")):showMessage("Failed to delete department","red")}}function updateEditLocationFields(){const e=$("#location-select").val();"NEW LOCATION"===e?(Location.currentlySelectedId=null,$("#location-name").val("")):($("#location-name").val(e),Location.currentlySelectedId=Location.getLocationByName(e).id)}function checkLocationNames(e){return e=e.toLowerCase(),"new location"===e||""===e||Location.locations.find(t=>t.name.toLowerCase()===e)}function checkDepartmentNames(e){return e=e.toLowerCase(),"new department"===e||""===e||Department.departments.find(t=>t.name.toLowerCase()===e)}async function saveLocation(){const e=$("#location-select").val(),t=$("#location-name").val().trim();if("NEW LOCATION"===e){const e=await Location.addLocation(t);if(e){showMessage("Added location!","lime"),resetEditLocations();const e=await Location.getAllLocations();e?(populateLocationSelects(),checkEditLocationFields(),Personnel.populateSearchResults(),reselectPerson(),filterResults()):(checkEditLocationFields(),showMessage("Added location, but failed to refresh database","yellow"))}else showMessage("Failed to add location","red")}else{const e=await Location.updateLocation(t,Location.currentlySelectedId);e?(showMessage("Saved changes!","lime"),populateLocationSelects(),reselectLocation(),checkEditLocationFields(),updateEditDepartmentFields(),Personnel.populateSearchResults(),reselectPerson(),filterResults()):showMessage("Failed to save changes!","red")}}async function deleteLocation(){const e=await Location.deleteLocation(Location.currentlySelectedId);e?(populateLocationSelects(),resetEditLocations(),showMessage("Location deleted!","lime")):showMessage("Failed to delete location!","red")}function reselectDepartment(){const e=Department.getDepartmentById(Department.currentlySelectedId).name;$("#department-select").val(e),updateEditDepartmentFields()}function reselectLocation(){const e=Location.getLocationById(Location.currentlySelectedId).name;$("#location-select").val(e),updateEditLocationFields()}function checkEditDepartmentFields(){setTimeout(()=>{const e=$("#department-select").val(),t=$("#department-name").val().trim(),a=$("#location-change").val();if("NEW DEPARTMENT"===e)checkDepartmentNames(t)||null===a?($("#save-department").addClass("disabled"),$("#delete-department").addClass("disabled")):$("#save-department").removeClass("disabled");else{const n=Department.getDepartmentByName(e).id,s=checkIfDepartmentInUse(n);s<=0?$("#delete-department").removeClass("disabled"):$("#delete-department").addClass("disabled"),null===a?$("#save-department").addClass("disabled"):Department.selectedDepCurrentLoc!==a&&t.toLowerCase()===e.toLowerCase()||!checkDepartmentNames(t)?$("#save-department").removeClass("disabled"):$("#save-department").addClass("disabled")}},0)}function checkEditLocationFields(){setTimeout(()=>{const e=$("#location-select").val(),t=$("#location-name").val().trim();if("NEW LOCATION"===e)checkLocationNames(t)?($("#save-location").addClass("disabled"),$("#delete-location").addClass("disabled")):$("#save-location").removeClass("disabled");else{const e=checkIfLocationInUse(Location.currentlySelectedId);e<=0?$("#delete-location").removeClass("disabled"):$("#delete-location").addClass("disabled"),checkLocationNames(t)?$("#save-location").addClass("disabled"):$("#save-location").removeClass("disabled")}},0)}function toggleResultsView(){$(".circle-button").toggleClass("active-circle"),$(".card-container").toggleClass("selected-results-container"),$(".table-container").toggleClass("selected-results-container"),$(".table-header").toggleClass("selected-results-container"),$(".search-results-container").toggleClass("auto-overflow overlay-overflow")}function showMessage(e,t="snow"){clearTimeout(globalTimeout),$(".message-output").html(e).css("color",t),globalTimeout=setTimeout(()=>{$(".message-output").html("Company Directory").css("color","snow")},3e3)}function initSetup(){Promise.all([Department.getAllDepartments(),Location.getAllLocations(),Personnel.getAllPersonnel()]).then(e=>{e[0]&&e[1]&&e[2]?(Personnel.populateSearchResults(),populateLocationSelects(),populateDepartmentSelects(),updateShowingCounter(),resetAddTab(),resetEditDepartments(),resetEditLocations(),disableTabs(),resetFilter(),filterResults()):showMessage("Error connecting to database!","red")})}let globalTimeout;class Personnel{static async getAllPersonnel(){try{const e=await fetch("php/getAllPersonnel.php"),t=await e.json();return"ok"===t.status.name&&(Personnel.personnel=t.data,!0)}catch(e){return console.log(e),!1}}static async addPersonnel(e,t,a,n,s){try{const o=await fetch("php/addPersonnel.php",{method:"POST",body:JSON.stringify({firstName:e,lastName:t,jobTitle:a,email:n,departmentId:s})}),l=await o.json();return"ok"===l.status.name}catch(e){return console.log(e),!1}}static async updatePersonnel(e,t,a,n,s,o){try{const l=await fetch("php/updatePersonnel.php",{method:"POST",body:JSON.stringify({firstName:e,lastName:t,jobTitle:a,email:n,departmentId:s,id:o})}),r=await l.json();if("ok"===r.status.name){const l=Personnel.personnel.findIndex(e=>e.id===o);return Personnel.personnel[l].firstName=e,Personnel.personnel[l].lastName=t,Personnel.personnel[l].jobTitle=a,Personnel.personnel[l].email=n,Personnel.personnel[l].departmentID=s,!0}return!1}catch(e){return console.log(e),!1}}static async deletePersonnel(e){try{const t=await fetch("php/deletePersonnel.php",{method:"POST",body:JSON.stringify({id:e})}),a=await t.json();if("ok"===a.status.name){const t=Personnel.personnel.findIndex(t=>t.id===e);return Personnel.personnel.splice(t,1),!0}return!1}catch(e){return console.log(e),!1}}static getPersonById(e){return Personnel.personnel.find(t=>t.id===e)}static async populateSearchResults(){$(".card-container").html(""),$(".table-container").html(""),Personnel.personnel.forEach(e=>{const t=Department.getDepartmentById(e.departmentID),a=Location.getLocationById(t.locationID);$(".card-container").append(`\n      <div class="person-card" data-id="${e.id}">\n        <div class="card-info-group">\n          <p class="card-data card-name">${e.firstName} ${e.lastName}</p>\n          <p class="card-data card-email">${e.email}</p>\n        </div>\n        <div class="card-info-group">\n          <p class="card-data card-job-title">${e.jobTitle}</p>\n        </div>\n        <div class="card-info-group">\n          <p class="card-data card-department">${t?t.name:"Unknown Department"}</p>\n          <p class="card-data card-location">${a?a.name:"Unknown Location"}</p>\n        </div>\n      </div>`),$(".table-container").append(`\n      <div class="person-row even" data-id="${e.id}">\n        <div class="cell cell-name b-right">${e.firstName} ${e.lastName}</div>\n        <div class="cell cell-job-title b-right">${e.jobTitle}</div>\n        <div class="cell cell-department b-right">${t?t.name:"Unknown"}</div>\n        <div class="cell cell-location">${a?a.name:"Unknown"}</div>\n      </div>`)}),$(".person-card, .person-row").on("click",e=>{Personnel.currentlySelectedId===$(e.currentTarget).data("id").toString()?(Personnel.currentlySelectedId=null,deselectPerson(),disableTabs()):(Personnel.currentlySelectedId=$(e.currentTarget).data("id").toString(),selectPerson(Personnel.currentlySelectedId),enableTabs())})}}_defineProperty(Personnel,"personnel",[]),_defineProperty(Personnel,"currentlySelectedId",null),_defineProperty(Personnel,"selectedPersonFirstName",null),_defineProperty(Personnel,"selectedPersonLastName",null),_defineProperty(Personnel,"selectedPersonEmail",null),_defineProperty(Personnel,"selectedPersonJobTitle",null),_defineProperty(Personnel,"selectedPersonDepartment",null);class Department{static async getAllDepartments(){try{const e=await fetch("php/getAllDepartments.php"),t=await e.json();return"ok"===t.status.name&&(Department.departments=t.data,!0)}catch(e){return console.log(e),!1}}static async addDepartment(e,t){try{const a=await fetch("php/addDepartment.php",{method:"POST",body:JSON.stringify({name:e,locationId:t})}),n=await a.json();return"ok"===n.status.name}catch(e){return console.log(e),!1}}static async updateDepartment(e,t,a){try{const n=await fetch("php/updateDepartment.php",{method:"POST",body:JSON.stringify({name:e,locationId:t,id:a})}),s=await n.json();if("ok"===s.status.name){const n=Department.departments.findIndex(e=>e.id===a);return Department.departments[n].name=e,Department.departments[n].locationID=t,!0}return!1}catch(e){return console.log(e),!1}}static async deleteDepartment(e){try{const t=await fetch("php/deleteDepartment.php",{method:"POST",body:JSON.stringify({id:e})}),a=await t.json();if("ok"===a.status.name){const t=Department.departments.findIndex(t=>t.id===e);return Department.departments.splice(t,1),!0}return!1}catch(e){return console.log(e),!1}}static getDepartmentById(e){return Department.departments.find(t=>t.id===e)}static getDepartmentByName(e){return Department.departments.find(t=>t.name===e)}static getHtmlOptions(){let e="";return Department.departments.forEach(t=>{e+=`<option data-department-id="${t.id}" value="${t.name}">${t.name}</option>`}),e}}_defineProperty(Department,"departments",[]),_defineProperty(Department,"currentlySelectedId",null),_defineProperty(Department,"selectedDepCurrentName",null),_defineProperty(Department,"selectedDepCurrentLoc",null);class Location{static async getAllLocations(){try{const e=await fetch("php/getAllLocations.php"),t=await e.json();return"ok"===t.status.name&&(Location.locations=t.data,!0)}catch(e){return console.log(e),!1}}static async addLocation(e){try{const t=await fetch("php/addLocation.php",{method:"POST",body:JSON.stringify({name:e})}),a=await t.json();return"ok"===a.status.name}catch(e){return console.log(e),!1}}static async updateLocation(e,t){try{const a=await fetch("php/updateLocation.php",{method:"POST",body:JSON.stringify({name:e,id:t})}),n=await a.json();if("ok"===n.status.name){const a=Location.locations.findIndex(e=>e.id===t);return Location.locations[a].name=e,!0}return!1}catch(e){return console.log(e),!1}}static async deleteLocation(e){try{const t=await fetch("php/deleteLocation.php",{method:"POST",body:JSON.stringify({id:e})}),a=await t.json();if("ok"===a.status.name){const t=Location.locations.findIndex(t=>t.id===e);return Location.locations.splice(t,1),!0}return!1}catch(e){return console.log(e),!1}}static getLocationById(e){return Location.locations.find(t=>t.id===e)}static getLocationByName(e){return Location.locations.find(t=>t.name===e)}static getHtmlOptions(){let e="";return Location.locations.forEach(t=>{e+=`<option class="location-option" data-location-id="${t.id}" value="${t.name}">${t.name}</option>`}),e}}_defineProperty(Location,"locations",[]),_defineProperty(Location,"currentlySelectedId",null),_defineProperty(Location,"currentlySelectedName",null),$(".tab").on("click",e=>{changeMainTab(e)}),$(".bottom-tab").on("click",e=>{changeBottomTab(e)}),$(".circle-button").on("click",()=>{toggleResultsView()}),$("#name-filter").on("keydown",()=>{filterResults()}),$("#department-filter").on("change",()=>{filterResults()}),$("#location-filter").on("change",()=>{filterResults()}),$("#reset-filter-btn").on("click",()=>{resetFilter()}),$("#save-changes").on("click",e=>{$(e.currentTarget).hasClass("disabled")||saveEditChanges()}),$(".edit-tab-text-input").on("keydown",()=>{checkEditTabDifferences()}),$(".edit-tab-select-input").on("change",()=>{checkEditTabDifferences()}),$("#add-entry").on("click",e=>{$(e.currentTarget).hasClass("disabled")||addPersonnel()}),$(".add-tab-text-input").on("keydown",()=>{checkAddTabRequiredFields()}),$(".add-tab-select-input").on("change",()=>{checkAddTabRequiredFields()}),$("#delete-entry").on("click",e=>{$(e.currentTarget).hasClass("disabled")||deletePersonnel()}),$("#department-select").on("change",()=>{updateEditDepartmentFields(),checkEditDepartmentFields()}),$("#department-name").on("keydown",()=>{checkEditDepartmentFields()}),$("#location-change").on("change",()=>{checkEditDepartmentFields()}),$("#save-department").on("click",e=>{$(e.currentTarget).hasClass("disabled")||saveDepartment()}),$("#delete-department").on("click",e=>{$(e.currentTarget).hasClass("disabled")||deleteDepartment()}),$("#location-select").on("change",()=>{updateEditLocationFields(),checkEditLocationFields()}),$("#location-name").on("keydown",()=>{checkEditLocationFields()}),$("#save-location").on("click",e=>{$(e.currentTarget).hasClass("disabled")||saveLocation()}),$("#delete-location").on("click",e=>{$(e.currentTarget).hasClass("disabled")||deleteLocation()}),initSetup();